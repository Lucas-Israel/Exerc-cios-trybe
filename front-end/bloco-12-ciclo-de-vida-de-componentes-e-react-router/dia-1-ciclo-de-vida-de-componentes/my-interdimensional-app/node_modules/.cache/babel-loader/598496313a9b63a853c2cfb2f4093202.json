{"ast":null,"code":"var _jsxFileName = \"/home/lucas/trybe-exercicios/front-end/bloco-12-ciclo-de-vida-de-componentes-e-react-router/dia-1-ciclo-de-vida-de-componentes/my-interdimensional-app/src/App.js\";\n// // App.js\n// import React, { Component } from 'react';\n// import './App.css';\n// class App extends Component {\n//     constructor(props){\n//         super(props);\n//         this.state = {\n//             characters: [],\n//         };\n//       }\n//     componentDidMount() {\n//       fetch('https://rickandmortyapi.com/api/character')\n//       .then(response => response.json())\n//       .then(data => {\n//         this.setState({characters: data.results})\n//       })\n//     }\n//   render() {\n//     const { characters } = this.state;\n//     return (\n//       <div className=\"App\">\n//         <h1>\n//           Ricky and Morty Characters:\n//         </h1>\n//         <div className=\"body\">\n//           {characters.map((character) => {\n//             return (\n//               <div className=\"container\" key={character.name}>\n//                 <h3>{character.name}</h3>\n//                 <img src={character.image} alt={character.name}/>\n//               </div>\n//             )\n//           })}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// export default App;\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DadJoke extends React.Component {\n  constructor() {\n    super();\n    this.saveJoke = this.saveJoke.bind(this);\n    this.state = {\n      jokeObj: undefined,\n      loading: true,\n      storedJokes: []\n    };\n  }\n\n  async fetchJoke() {\n    const requestHeaders = {\n      headers: {\n        Accept: 'application/json'\n      }\n    };\n    const requestReturn = await fetch('https://icanhazdadjoke.com/', requestHeaders);\n    const requestObject = await requestReturn.json();\n    this.setState({\n      jokeObj: requestObject\n    });\n  }\n\n  componentDidMount() {\n    this.fetchJoke();\n  }\n\n  saveJoke() {//Esse método será responsável por salvar a piada no array de piadas storedJokes!!\n  }\n\n  render() {\n    const {\n      storedJokes\n    } = this.state;\n\n    const loadingElement = /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 28\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: storedJokes.map(_ref => {\n          let {\n            id,\n            joke\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: joke\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 47\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default DadJoke;","map":{"version":3,"names":["React","DadJoke","Component","constructor","saveJoke","bind","state","jokeObj","undefined","loading","storedJokes","fetchJoke","requestHeaders","headers","Accept","requestReturn","fetch","requestObject","json","setState","componentDidMount","render","loadingElement","map","id","joke"],"sources":["/home/lucas/trybe-exercicios/front-end/bloco-12-ciclo-de-vida-de-componentes-e-react-router/dia-1-ciclo-de-vida-de-componentes/my-interdimensional-app/src/App.js"],"sourcesContent":["// // App.js\n// import React, { Component } from 'react';\n// import './App.css';\n\n// class App extends Component {\n//     constructor(props){\n//         super(props);\n//         this.state = {\n//             characters: [],\n//         };\n//       }\n\n//     componentDidMount() {\n//       fetch('https://rickandmortyapi.com/api/character')\n//       .then(response => response.json())\n//       .then(data => {\n//         this.setState({characters: data.results})\n//       })\n//     }\n\n//   render() {\n//     const { characters } = this.state;\n//     return (\n//       <div className=\"App\">\n//         <h1>\n//           Ricky and Morty Characters:\n//         </h1>\n//         <div className=\"body\">\n//           {characters.map((character) => {\n//             return (\n//               <div className=\"container\" key={character.name}>\n//                 <h3>{character.name}</h3>\n//                 <img src={character.image} alt={character.name}/>\n//               </div>\n//             )\n//           })}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\nimport React from 'react';\n\nclass DadJoke extends React.Component {\n  constructor() {\n    super();\n\n    this.saveJoke = this.saveJoke.bind(this);\n\n    this.state = {\n      jokeObj: undefined,\n      loading: true,\n      storedJokes: [],\n    }\n  }\n\n  async fetchJoke() {\n    const requestHeaders = { headers: { Accept: 'application/json' } }\n    const requestReturn = await fetch('https://icanhazdadjoke.com/', requestHeaders)\n    const requestObject = await requestReturn.json();\n    this.setState({\n      jokeObj: requestObject,\n    })\n  }\n\n  componentDidMount() {\n    this.fetchJoke();\n  }\n\n  saveJoke() {\n    //Esse método será responsável por salvar a piada no array de piadas storedJokes!!\n  }\n\n  render() {\n    const { storedJokes } = this.state;\n    const loadingElement = <span>Loading...</span>;\n\n    return (\n      <div>\n        <span>\n          {storedJokes.map(({ id, joke }) => (<p key={id}>{joke}</p>))}\n        </span>\n\n      {\n        /*\n        Aqui vamos construir nossa lógica com uma renderização condicional\n        do nosso componente Joke, a ideia é renderizar um loading enquanto\n        esperamos a nossa requisição de piadas finalizar.\n\n        <p>RENDERIZAÇÃO CONDICIONAL</p>\n        */\n      }\n\n      </div>\n    );\n  }\n}\n\nexport default DadJoke;"],"mappings":";AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;EACpCC,WAAW,GAAG;IACZ;IAEA,KAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;IAEA,KAAKC,KAAL,GAAa;MACXC,OAAO,EAAEC,SADE;MAEXC,OAAO,EAAE,IAFE;MAGXC,WAAW,EAAE;IAHF,CAAb;EAKD;;EAEc,MAATC,SAAS,GAAG;IAChB,MAAMC,cAAc,GAAG;MAAEC,OAAO,EAAE;QAAEC,MAAM,EAAE;MAAV;IAAX,CAAvB;IACA,MAAMC,aAAa,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgCJ,cAAhC,CAAjC;IACA,MAAMK,aAAa,GAAG,MAAMF,aAAa,CAACG,IAAd,EAA5B;IACA,KAAKC,QAAL,CAAc;MACZZ,OAAO,EAAEU;IADG,CAAd;EAGD;;EAEDG,iBAAiB,GAAG;IAClB,KAAKT,SAAL;EACD;;EAEDP,QAAQ,GAAG,CACT;EACD;;EAEDiB,MAAM,GAAG;IACP,MAAM;MAAEX;IAAF,IAAkB,KAAKJ,KAA7B;;IACA,MAAMgB,cAAc,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAvB;;IAEA,oBACE;MAAA,uBACE;QAAA,UACGZ,WAAW,CAACa,GAAZ,CAAgB;UAAA,IAAC;YAAEC,EAAF;YAAMC;UAAN,CAAD;UAAA,oBAAmB;YAAA,UAAaA;UAAb,GAAQD,EAAR;YAAA;YAAA;YAAA;UAAA,QAAnB;QAAA,CAAhB;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAkBD;;AApDmC;;AAuDtC,eAAevB,OAAf"},"metadata":{},"sourceType":"module"}